<!--
    Checkpoint #46 - Comments
    
    View changes:
        - Create a '_comment.html.erb' partial in the comments directory. Use it
          in the 'posts#show' view to show the body of each comment already
          associated with the post. Whereas our above form partial should render
          the form for submitting a new comment, this comment partial should
          render the relevant information for a single preexisting comment
          associated with our '@post'. Because this partial renders a single
          comment, we need to call it multiple times, rendering a partial for
          each comment in @comments. This is a good candidate for an each loop.
-->
<!--
    Checkpoint #51 - Destroy
    
    Finally, we also have to modify the comment-listing view -- the 'app/views/comments/_comment.html.erb' partial called in 'posts#show'.
    
    Note that in this partial we refer to '@topic' and '@post', but 'comment'. This is because the instance variables are available across view partials, and we don't need to pass them. We're not accessing the '@comment' instance variable, but rather the specific 'comment' over which we're looping, which is a local variable we need to pass in.

<div class="row">
    <div class="col-md-8">
        <p>%= markdown_to_html comment.body %></p>
    </div>
</div>
-->
<div class="media">
    <div class="media-left">
        <%= image_tag(comment.user.avatar.small.url, class: 'media-object') if comment.user.avatar? %>
    </div>
    <div class="media-body">
        <small>
            <%= comment.user.name %> commented <%= time_ago_in_words(comment.created_at) %> ago
            <% if policy(comment).destroy? %>
                <!--
                    Assignment #51 - Destroy
                    
                    Note the 'only: []' in the top-level post resources line. This is because we don't want to create any '/posts/:id' routes, just 'posts/:post_id/comments'.
                    
                    Run 'rake routes' to see how this changes routing. Then make the following changes to refactor with these new, shallower routes:

                    Changge the comment paths, in both the 'comments/_comment.html.erb' and the 'comments/_form.html.erb' partials.
                
                | %= link_to "Delete", [@topic, @post, comment], method: :delete %>
                -->
                | <%= link_to "Delete", [@post, comment], method: :delete %>
            <% end %>
        </small>
        <p><%= comment.body %></p>
    </div>
</div>