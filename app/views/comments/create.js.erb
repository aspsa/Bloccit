/*
    Checkpoint #61 - Creating with Ajax
    
    Create app/views/comments/create.js.erb, and consider the following pseudo code for your view:

        if the comment is valid
          add the comment to the list of comments
        else
          render an error on the form
        end
        
    If a comment is valid by the time the view is rendered, it will have already been saved in the controller, so we don't need to save it here.
    
    Showing a new comment will require a call to render an updated comments collection, or the comment form. This can be done from within our js.erb file using escape_javascript, which will make sure the HTML generated by the render is generated properly on the Ajax response.

    Refer to the Rails docs for more details on escape_javascript.
    
    Using our pseudo-code as a guide, use the valid? method, along with escape_javascript to create a new comment unobtrusively.
*/
<% if @comment.valid? %>
    /*
        - Rather than attach new comments to the top of the list, attach them to the bottom. This will make Bloccit adhere to the conventions followed by most commenting systems.
        
        - To attach new comments to the bottom of the list, use the jQuery append() method.
        
        - Since we are now appending comments to the bottom of the list, reverse the default_scope in comment.rb so that comments are now returned in ascending order by their updated date.
        
    $('.js-comments').prepend("<%= escape_javascript(render(@comment)) %>");
    
    
        Checkpoint #61 - Creating with Ajax
        
        We'll use the new @new_comment variable in create.js.erb.
    
    $('.new-comment').html("<%= escape_javascript(render partial: 'comments/form', locals: { post: @post, comment: @new_comment }) %>");
    */
    $('.new-comment').html("<%= escape_javascript(render partial: 'comments/form', locals: { post: @post, comment: @new_comment }) %>");
    
    $('.js-comments').append("<%= escape_javascript(render(@comment)) %>");
<% else %>
    $('.new-comment').html("<%= escape_javascript(render partial: 'comments/form', locals: { post: @post, comment: @comment }) %>");
<% end %>