<!--
    When you refresh the page, you should see something like this:
    
    {"action"=>"show", "controller"=>"posts", "id"=>"1"}
    
    ...this hash contains information on which controller we're in, and which
    action. It also has the 'id' of the post on which we clicked (and which is
    encoded in the URL).
-->

<!-- &lt;%= params %&gt; -->
<!--
    Checkpoint #33 - CRUD
    Replace previous code with post-specific code.
-->
<!--
    Checkpoint #43 - Post Markdown
    
<h1>&lt;%= @post.title %&gt;</h1>
-->
<h1><%= markdown_to_html @post.title %></h1>

<!-- Checkpoint #35 - More CRUD, the 'link_to statement -->
<!-- Checkpoint #39 - Authorization, the surrouding 'if' -->
<!--
    Checkpoint #40 - Topics and Posts
    
    Add (Twitter) Bootstrap CSS.
    Modified the 'link_to' statement.
&lt;% if policy(@post).edit? %&gt;
    &lt;%= link_to "Edit", edit_post_path(@post), class: 'btn btn-success' %&gt;
&lt;% end %&gt;
<p>&lt;%= @post.body %&gt;</p>
-->

<!--
    Checkpoint #46 - Comments
    
    View changes:
        - Create a '_comment.html.erb' partial in the comments directory. Use it
          in the 'posts#show' view to show the body of each comment already
          associated with the post. Whereas our above form partial should render
          the form for submitting a new comment, this comment partial should
          render the relevant information for a single preexisting comment
          associated with our '@post'. Because this partial renders a single
          comment, we need to call it multiple times, rendering a partial for
          each comment in @comments. This is a good candidate for an each loop.
-->
<div class="row">
    <div class="col-md-8">
        <!--
            Checkpoint #44 - Uploading Images
            
            Open posts#show and add a user image to a post.
        -->

        <small>
            <%= image_tag(@post.user.avatar.tiny.url) if @post.user.avatar? %>
            submitted <%= time_ago_in_words(@post.created_at) %> ago by
            <%= @post.user.name %>
        </small>

        <!--
            Checkpoint #43 - Post Markdown

        <p>%= @post.body %></p>
        -->    

        <p><%= markdown_to_html @post.body %></p>
    </div>
    <div class="col-md-4">
        <% if policy(@post).edit? %>
            <%= link_to "Edit", edit_topic_post_path(@topic, @post), class: 'btn btn-success' %>
        <% end %>
    </div>
</div>

<h3>Comments:</h3>

<!--
    Assignment #46 - Comments
    
    If you try to create a comment without first signing in, you'll encounter a
    no method 'id' for NilClass error. This error is thrown because current_user
    is nil when you're not signed in, and comment creation attempts to extract
    an id from this nil object.
        - Use CommentPolicy in posts#show to hide the comment form unless a user
          is signed in.
-->
<% if @post.user.present? %>
    <%= render partial: 'comments/form', locals: {topic: @topic, post: @post, comment: @comment} %>
<% end %>
<%= render partial: 'comments/comment', collection: @comments %>
